@use "bulma/sass/utilities/mixins";

.tag:not(body).is-delete:hover,
.tag:not(body).is-delete:focus {
    background-color: var(--bulma-danger);
    color: var(--bulma-danger-invert);
}

:host:not(:first-child) {

    .question-header,
    .content {
        margin-top: 2rem;
    }
}

%is-loading {
    transition: filter 0.2s ease-out;

    &.is-loading {
        opacity: 0.5;
        pointer-events: none;
        filter: blur(2px) grayscale(100%);
    }
}

.box {
    @extend %is-loading;
}

:host:hover .metadata {
    z-index: 1;
    position: sticky;
    top: 0;
}

luu-view,
hr {
    animation: append-animate .3s ease-in-out;
    display: block;
}

.question-header {
    @extend %is-loading;

    cursor: pointer;
    border-radius: 5px;

    .exclude-filter {
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    .question-filters {
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    &:hover {
        background-color: rgba(202, 201, 201, 0.3);

        .exclude-filter {
            opacity: 100%;
        }
    }

    .expand-button {
        .icon {
            transition: transform 0.3s ease-in-out;
        }

        &.expanded .icon {
            transform: rotate(180deg);
        }
    }
}

:host:hover {
    .question-filters {
        opacity: 1;
    }
}

// border to separate dialects
@mixin border-bottom {
    border-bottom: 1px solid var(--bulma-grey-light);

    div:has(+ &:last-child),
    &:last-child {
        border-bottom: none;
    }
}

%dialect-row {
    @include mixins.tablet {
        @include border-bottom;
    }

    &.expanded {
        animation: append-animate .3s ease-in-out;
    }
}

.dialect-header {
    @extend %dialect-row;

    .dialect-tag .tag {
        height: auto;
        min-height: 2em;
        white-space: normal;
    }

    &:not(:hover) {
        .dialect-tag .tag {
            background: none;

            &.is-delete {
                opacity: 0;
            }
        }
    }
}

.dialect-answers {
    @extend %dialect-row;

    // always have this border, even on mobile
    @include border-bottom;
}

.filterable:hover,
a.has-text-dark.filterable:hover {
    color: var(--bulma-success) !important;
    cursor: pointer;

    ::ng-deep .highlight {
        background: var(--bulma-success);
        color: var(--bulma-success-invert) !important;

    }
}

@keyframes append-animate {
    from {
        transform: translateY(-50px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.unattested {
    color: var(--bulma-danger-bold);
}

.tag {
    max-width: 20em;
    overflow: clip;

    &.is-match {
        background-color: var(--bulma-warning);
        color: var(--bulma-warning-invert);
    }
}
